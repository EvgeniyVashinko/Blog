@model Article
@inject Services.DataManager dataManager;
@inject UserManager<User> userManager
@inject SignInManager<User> SignInManager
@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer localizer

@{
    ViewData["Title"] = localizer["title"];
}

<section>
    <header class="main">
        <h1>@Model.Title</h1>
    </header>
    @if (Model.ImagePath != null)
    {
        <span class="image left"><img src="~/images/@Model.ImagePath" alt="" /></span>
    }


    @Html.Raw(Model.Text)

<div class="row">
    <div class="col-7 col-12-medium">
        <ul class="icons">
            <li>
                <strong id="likeNum">@Model.ArticleLikes.Count()</strong>
            </li>
            <li>
                <i id="likeButton"><i class="icon fa fa-thumbs-up" aria-hidden="true"></i></i>
            </li>
        </ul>
    </div>
    <div class="col-5 col-12-medium inner">
        <form asp-controller="Article" asp-action="Report" method="get">
            <div class="row">
                <input type="hidden" asp-for="@Model.Id" class="form-control" id="id" />
                <div class="col-6 col-12-xsmall">
                    <vc:categories-list list="@dataManager.ReportCategories.GetReportCategoriesStringList(localizer["langcode"].Value)" select="true" contr="Article" actn="Report" id="@Model.Id"></vc:categories-list>
                </div>
                <div class="col-4 col-12-xsmall">
                    <input class="btn btn-primary" type="submit" value="@localizer["complain"]" />
                </div>
            </div>
        </form>
    </div>

</div>


    @if (SignInManager.IsSignedIn(User))
    {
        <form>
            <input type="hidden" asp-for="@Model.Id" class="form-control" id="articleId" />
            <div class="form-group">
                <textarea class="form-control" placeholder="@localizer["comm"]" rows="6" id="content"></textarea>
            </div>
            <br />
            <div class="form-group">
                <input class="btn btn-primary" type="submit" value="@localizer["send"]" id="send" />
            </div>
        </form>
    }

    <br />
    <div id="comments">
        @if (ViewBag.Comments != null)
        {
            @foreach (Comment comment in ViewBag.Comments)
            {
                var uid = comment.UserId.ToString();
                var username = userManager.FindByIdAsync(uid).Result.UserName;
                <div class="box">
                    <a href=""><h4>@username</h4></a>
                    <p>@comment.Text</p>
                    <date date="@comment.PublishDate"></date>
                </div>
            }
        }
    </div>
    <script src="~/js/signalr/dist/browser/signalr.min.js"></script>
    @*<script src="~/js/sendComments.js"></script>*@

    <script type="text/javascript">
        "use strict";

        var connection = new signalR.HubConnectionBuilder().withUrl("/comment").build();
        document.getElementById("send").disabled = true;
        connection.start().then(AddToGroup);
        document.getElementById("send").addEventListener("click", SendComment);
        connection.on("Send", AddComment);

        function AddComment(userName, content, publishDate) {
            var timeOffset = new Date().getTimezoneOffset();
            var options = { year: 'numeric', month: 'numeric', day: 'numeric', hour: 'numeric', minute: 'numeric', second: 'numeric', hour12: false };
            var date = new Date(publishDate - timeOffset).toLocaleString('ru-RU', options).replace(",", "");

            var comments = document.getElementById("comments")
            comments.insertAdjacentHTML("beforeend",
                '<div class="box">' +
                '<a href=""><h4>' + userName + '</h4 ></a > ' +
                '<p>' + content + '</p >' +
                '<p>' + date + '</p >' +
                '</div >'
            )
        }

        function AddToGroup() {
            document.getElementById("send").disabled = false;
            var postId = document.getElementById("articleId").value;
            connection.invoke("AddToGroup", postId)
        }

        function SendComment(event) {
            var articleId = document.getElementById("articleId").value;
            var content = document.getElementById("content").value;
            if (document.getElementById("content").value != "") {
                document.getElementById("content").value = "";
                connection.invoke("SendComment", articleId, content)
                event.preventDefault();
            }
        }
    </script>
</section>

<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js"></script>
<script type="text/javascript">
    $.ajax({
        type: 'GET',
        url: '@Url.Action("GetArticle", "Blog")',
        accept: 'application/json',
        data: {
            id : '@Model.Id',
        },
        success: function (data) {
            console.log(data);
            let likeButton = document.getElementById("likeButton");
            likeButton.onclick = (e) => {
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("LikeNumber", "Blog")',
                    accept: 'application/json',
                    data: {
                        id : data.id,
                    },
                    success: function (data) {
                        console.log(data)
                        let likeNumber = document.getElementById("likeNum");
                        likeNumber.innerHTML = data.num;
                    }
                });
            }
            
        }

    });
</script>

